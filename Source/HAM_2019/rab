Сравнение файлов temp_ham.for и TEMP_BAS.FOR
***** temp_ham.for
C Temperature calculation
C 23/03/2019 - T Hot -> nil
C 10.05.2018 - Joul source send to HAMMONIA
***** TEMP_BAS.FOR
C Temperature calculation
C 10.05.2018 - Joul source send to HAMMONIA
*****

***** temp_ham.for
C - E
C - TNPOT_h - нагрев горячим кислородом
c    . . . cicle_prog alog i и j
      subroutine heatpo_ham(pgl,pgi,parj,solet,solu,nsu,nse,
     *           kpars,rads,g,nh,gkoor,its,ddolg,dtet,
***** TEMP_BAS.FOR
C - E

c    . . . cicle_prog alog i и j
      subroutine heatpo_bas(pgl,pgi,parj,solet,solu,nsu,nse,
     *           kpars,rads,g,nh,gkoor,its,ddolg,dtet,
*****

***** temp_ham.for
      integer day
      data apm/7*11./
      data pi,om/3.14159,7.27e-5/
!      if(ids.gt.24) then
***** TEMP_BAS.FOR
      integer day
!      data apm/7*11./,fa,fs/130.,130./ ! for MSIS section 
!      data pi,om/3.14159,7.27e-5/
!      if(ids.gt.24) then
*****

***** temp_ham.for
!
      call tnpot_ham(pgl,pgi,an1,an2,an3,an6,an61,vi,vj,vr,
     *              anco2,ro,vim,vid,vir,rads,g,gkoor,ctd,solu,nsu,
***** TEMP_BAS.FOR
!
      call tnpot_bas(pgl,pgi,an1,an2,an3,an6,an61,vi,vj,vr,
     *              anco2,ro,vim,vid,vir,rads,g,gkoor,ctd,solu,nsu,
*****

***** temp_ham.for
c  . . . циклическая прогонка вдоль  fi & tet
C     call tn_jc(an61,vj,
C    *     rads,nh,its,ids,dts,mass(10))
C     call boskli(an61,nh,its,ids)
C     call tn_ic(an61,vi,
***** TEMP_BAS.FOR
c  . . . циклическая прогонка вдоль  fi & tet
      call tn_jc(an61,vj,
     *     rads,nh,its,ids,dts,mass(10))
      call boskli(an61,nh,its,ids)
C     call tn_ic(an61,vi,
*****

***** temp_ham.for
c    . . . Старый вариант
      call tngojm(an61,vj,
     *     rads,nh,its,ids,dts,mass(10))
      call boskli(an61,nh,its,ids)
      call tngoim_a(an61,vi,             ! Явная схема переноса
***** TEMP_BAS.FOR
c    . . . Старый вариант
!      call tngojm(an61,vj,
!     *     rads,nh,its,ids,dts,mass(10))
!      call boskli(an61,nh,its,ids)
      call tngoim_a(an61,vi,             ! Явная схема переноса
*****

***** temp_ham.for
c
      subroutine tnpot_ham(pgl,pgi,an1,an2,an3,an6,an61,vi,vj,vr,
     *                 anco2,ro,vim,vid,vir,rads,g,gkoor,ctd,solu,nsu,
***** TEMP_BAS.FOR
c
      subroutine tnpot_bas(pgl,pgi,an1,an2,an3,an6,an61,vi,vj,vr,
     *                 anco2,ro,vim,vid,vir,rads,g,gkoor,ctd,solu,nsu,
*****

***** temp_ham.for
     *                 kpars,ins,nh,its,ids,dl,uts,dts,mass)
      USE mo_ham_gsm, ONLY:qJGSM
      dimension pgl(kpars,nh,its,ids),an1(its,ids,nh),
***** TEMP_BAS.FOR
     *                 kpars,ins,nh,its,ids,dl,uts,dts,mass)
! for EAGLE part
!      USE mo_ham_gsm, ONLY:qJGSM
      USE mo_bas_gsm

      dimension pgl(kpars,nh,its,ids),an1(its,ids,nh),
*****

***** temp_ham.for
      allocate (pa(NH+5),pb(NH+5),q(NH),qdj(NH))
      data re/6.371e8/,pi/3.1415926/,bk/1.38e-16/,
     *    am1,am2,am3/53.12e-24,46.51e-24,26.56e-24/
     *,   om/7.272205e-5/
      cr=pi/180.
***** TEMP_BAS.FOR
      allocate (pa(NH+5),pb(NH+5),q(NH),qdj(NH))
!      data re/6.371e8/,pi/3.1415926/,bk/1.38e-16/,
!     *    amO2,amN2,amO/53.12e-24,46.51e-24,26.56e-24/
!     *,   om/7.272205e-5/
      cr=pi/180.
*****

***** temp_ham.for
        an60=pgl(7,1,i,j)
        call ijoulp(q,qdj,pgl,pgi,ctd,rads,g,an60,solu,
     *            gkoor,kpars,ins,nh,its,ids,nsu,i,j,uts,dl,
***** TEMP_BAS.FOR
        an60=pgl(7,1,i,j)
        call ijoulp_bas(q,qdj,pgl,pgi,ctd,rads,g,an60,solu,
     *            gkoor,kpars,ins,nh,its,ids,nsu,i,j,uts,dl,
*****

***** temp_ham.for
         rc=(2.5*(an1(i,j,k)+an2(i,j,k))+1.5*an3(i,j,k))*bk
         qJGSM(i,j,k)=qdj(k)/rc
         q(k)=q(k)+qdj(k)
***** TEMP_BAS.FOR
         rc=(2.5*(an1(i,j,k)+an2(i,j,k))+1.5*an3(i,j,k))*bk
! for EAGLE part
!        qJGSM(i,j,k)=qdj(k)/rc
         q(k)=q(k)+qdj(k)
*****

***** temp_ham.for
        sum1=(an1(i,j,k)+an2(i,j,k)+an3(i,j,k))
        ams=(an1(i,j,k)*am1+an2(i,j,k)*am2 +
     *       an3(i,j,k)*am3)/sum1
        rc=(2.5*(an1(i,j,k)+an2(i,j,k))+1.5*an3(i,j,k))*bk
***** TEMP_BAS.FOR
        sum1=(an1(i,j,k)+an2(i,j,k)+an3(i,j,k))
        ams=(an1(i,j,k)*amo2+an2(i,j,k)*amN2 +
     *       an3(i,j,k)*amO)/sum1
        rc=(2.5*(an1(i,j,k)+an2(i,j,k))+1.5*an3(i,j,k))*bk
*****

***** temp_ham.for
!
      subroutine ijoulp(q,qdj,pgl,pgi,ctd,rads,g,an60,solu,
     *                  gkoor,kpars,ins,nh,its,ids,nsu,i,j,uts,
***** TEMP_BAS.FOR
!
      subroutine ijoulp_bas(q,qdj,pgl,pgi,ctd,rads,g,an60,solu,
     *                  gkoor,kpars,ins,nh,its,ids,nsu,i,j,uts,
*****

***** temp_ham.for
     *                  del,an1,an2,an3,an6,anco2,vr,vi,vj,vim,vid,vir)
      dimension q(nh),g(nh),pgl(kpars,nh,its,ids),gkoor(2,its,ids),
***** TEMP_BAS.FOR
     *                  del,an1,an2,an3,an6,anco2,vr,vi,vj,vim,vid,vir)
      USE mo_bas_gsm, ONLY: pi,om,qdis

      dimension q(nh),g(nh),pgl(kpars,nh,its,ids),gkoor(2,its,ids),
*****

***** temp_ham.for
     *         ,vir(nh,its,ids),qdj(nh)
      data pi/3.14159265359d0/,om/7.272205e-5/,
c   . . . эффективность для зимы
***** TEMP_BAS.FOR
     *         ,vir(nh,its,ids),qdj(nh)
!      data pi/3.14159265359d0/,om/7.272205e-5/,
       data
c   . . . эффективность для зимы
*****

***** temp_ham.for
        
        di=dis mod(ano,tem,g(k),rads(k),solu,nsu,hi,key)*ano
c
***** TEMP_BAS.FOR
        
!        di=dis mod(ano,tem,g(k),rads(k),solu,nsu,hi,key)*ano
        di=qdis(2,i,j,k)
c
*****

***** temp_ham.for
      real ltau,ksy
      data am1,am2,am3,amco2/53.12e-24,46.51e-24,26.56e-24,
     *     73.04e-24/,
***** TEMP_BAS.FOR
      real ltau,ksy
      data amo2,amN2,amO,amco2/53.12e-24,46.51e-24,26.56e-24,
     *     73.04e-24/,
*****

***** temp_ham.for
! 
***** TEMP_BAS.FOR
*****

